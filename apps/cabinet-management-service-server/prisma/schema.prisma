datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Farm {
  createdAt   DateTime     @default(now())
  greenhouses Greenhouse[]
  id          String       @id @default(cuid())
  name        String?
  updatedAt   DateTime     @updatedAt
  user        User?        @relation(fields: [userId], references: [id])
  userId      String?
}

model FieldModel {
  createdAt    DateTime    @default(now())
  devices      Device[]
  greenhouse   Greenhouse? @relation(fields: [greenhouseId], references: [id])
  greenhouseId String?
  id           String      @id @default(cuid())
  name         String?
  updatedAt    DateTime    @updatedAt
}

model Device {
  configurations Configuration[]
  createdAt      DateTime        @default(now())
  fieldField     FieldModel?     @relation(fields: [fieldFieldId], references: [id])
  fieldFieldId   String?
  id             String          @id @default(cuid())
  name           String?
  sensors        Sensor[]
  updatedAt      DateTime        @updatedAt
}

model Greenhouse {
  createdAt DateTime     @default(now())
  farm      Farm?        @relation(fields: [farmId], references: [id])
  farmId    String?
  fields    FieldModel[]
  id        String       @id @default(cuid())
  name      String?
  updatedAt DateTime     @updatedAt
}

model Sensor {
  createdAt          DateTime            @default(now())
  device             Device?             @relation(fields: [deviceId], references: [id])
  deviceId           String?
  id                 String              @id @default(cuid())
  sensorMeasurements SensorMeasurement[]
  typeField          String?
  updatedAt          DateTime            @updatedAt
}

model Configuration {
  createdAt  DateTime @default(now())
  device     Device?  @relation(fields: [deviceId], references: [id])
  deviceId   String?
  id         String   @id @default(cuid())
  parameters Json?
  updatedAt  DateTime @updatedAt
}

model SensorMeasurement {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  sensor    Sensor?   @relation(fields: [sensorId], references: [id])
  sensorId  String?
  timestamp DateTime?
  typeField String?
  updatedAt DateTime  @updatedAt
  value     Float?
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  farms     Farm[]
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  name      String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}
